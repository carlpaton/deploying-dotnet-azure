name: Build and Deploy API on Azure
run-name: CI/CD ${{ github.event_name }} by @${{ github.actor }}

# Controls when the action will run
on:
  workflow_dispatch:
  push:
    branches:
      - main

# Workflows of the pipeline
jobs:
  build-and-push-image:
    runs-on: ubuntu-22.04
    outputs:
      short_sha: ${{ steps.vars.outputs.short_sha }}

    steps:
    - name: Checkout repository
      id: github
      uses: actions/Checkout@v3

    - name: Setup WebApi .NET
      uses: actions/setup-dotnet@v2
      with:
        dotnet-version: '8.0.x'

    - name: Configure Azure Container Registry (ACR)
      uses: azure/docker-login@v2
      with:
        login-server: ${{ vars.ACR_SERVER }}
        username: ${{ secrets.ACR_USER }}
        password: ${{ secrets.ACR_PASSWORD }}

    - name: Get commit SHA
      id: vars
      run: |
        getSha=$(git rev-parse --short ${{ github.sha }})
        echo "::set-output name=short_sha::$getSha"

    - name: Build and push image to Azure Container Registry (ACR)
      working-directory: ./src/DemoApi
      env:
        ACR_REGISTRY: ${{ vars.ACR_SERVER }}
        IMAGE_TAG: ${{ steps.vars.outputs.short_sha }}
      run: |
        docker build -t $ACR_REGISTRY/demoacrbb8c7a39dev:$IMAGE_TAG -t $ACR_REGISTRY/demoacrbb8c7a39dev:latest .
        docker push $ACR_REGISTRY/demoacrbb8c7a39dev --all-tags

  deploy-image-to-container-service:
    runs-on: ubuntu-22.04
    needs: build-and-push-image

    steps:
      - name: Login to Azure
        uses: azure/login/@v1
        with:
          creds: ${{ secrets.AZ_CREDENTIALS }}

      - name: Deploy to Azure Container Apps (ACA)
        uses: azure/container-apps-deploy-action@v1
        env:
          IMAGE_TAG: ${{ needs.build-and-push-image.outputs.short_sha }}
          ACR_SERVER: ${{ vars.ACR_SERVER }}
          AZ_MSSQL_DB_CONN: ${{ secrets.AZ_MSSQL_DB_CONN }}
        with:
          registryUrl: ${{ vars.ACR_SERVER }}
          imageToDeploy: $ACR_SERVER/demoacrbb8c7a39dev:$IMAGE_TAG
          targetPort: 8080
          ingress: external
          containerAppName: demo-aca-bb8c7a39-dev
          containerAppEnvironment: demo-cae-bb8c7a39-dev
          resourceGroup: demo-rg-bb8c7a39-dev
          environmentVariables: |
            ASPNETCORE_ENVIRONMENT=Development ASPNETCORE_URLS=http://+:8080 ConnectionStrings__SqlServer=$AZ_MSSQL_DB_CONN